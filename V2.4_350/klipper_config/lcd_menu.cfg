#####################################################################
#  Displays
#####################################################################
[display]
##  mini12864 LCD Display
lcd_type: uc1701
cs_pin: z:P1.18
a0_pin: z:P1.19
encoder_pins: ^z:P3.25,^z:P3.26
click_pin: ^!z:P0.28
contrast: 63
## definition is in lcd_menu.cfg
display_group: __voron_display

[neopixel neo_display]
##	To control Neopixel RGB in mini12864 display
pin: z:P1.21
chain_count: 3
color_order: RGB
initial_RED: 0.8
initial_GREEN: 0.3
initial_BLUE: 0.0

##	Set RGB values on boot up for each Neopixel. 
##	Index 1 = display, Index 2 and 3 = Knob
[delayed_gcode setdisplayneopixel]
initial_duration: 1
gcode:
    SET_LED LED=neo_display RED=0   GREEN=0.5   BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=neo_display RED=0   GREEN=0.5   BLUE=0 INDEX=3 TRANSMIT=1

#####################################################################
# 	Glyph definition
#####################################################################
[display_glyph chamber]
data:
    0000000000000000
    1111111111111111
    1000010000100001
    1000010000100001
    1000011111100001
    1000000000000001
    1000000000000001
    1000001111000001
    1011101001011101
    1000001111000001
    1000000110000001
    1000000000000001
    1011111111111101
    1000100000010001
    1111111111111111
    0000000000000000
    
[display_glyph voron]
data:
    1111111001111111
    1111100000011111
    1111000000001111
    1100000000000011
    1000001100110001
    1000011001100001
    1000110011000001
    1001100110000001
    1000000110011001
    1000001100110001
    1000011001100001
    1000110011000001
    1110000000000111
    1111000000001111
    1111100000011111
    1111111001111111

[display_glyph voroninv]
data:
    0000001110000000
    0000111111100000
    0001111111110000
    0111111111111100
    1111100111001110
    1111001110011110
    1110011100111110
    1100111001111110
    1111110011100110
    1111100111001110
    1111001110011110
    1110011100111110
    0111111111111100
    0001111111110000
    0000111111100000
    0000001110000000
    
#####################################################################
# 	Display Data definition
#####################################################################
[display_template _vheater_temperature]
param_heater_name: "extruder"
text:
  {% if param_heater_name in printer %}
    {% set heater = printer[param_heater_name] %}
    # Show glyph
    {% if param_heater_name == "heater_bed" %}
      {% if heater.target %}
        {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
        ~bed_heat{frame}~
      {% else %}
        ~bed~
      {% endif %}
    {% else %}
      ~extruder~
    {% endif %}
    # Show temperature
    { "%3.0f" % (heater.temperature,) }
    # Optionally show target
    {% if heater.target and (heater.temperature - heater.target)|abs > 2 %}
      ~right_arrow~
      { "%0.0f" % (heater.target,) }
    {% endif %}
    ~degrees~
  {% endif %}

[display_data __voron_display extruder]
position: 0, 0
text: { render("_vheater_temperature", param_heater_name="extruder") }

[display_data __voron_display fan]
position: 0, 10
text:
  {% if 'fan' in printer %}
    {% set speed = printer.fan.speed %}
    {% if speed %}
      {% set frame = (printer.toolhead.estimated_print_time|int % 2) + 1 %}
      ~fan{frame}~
    {% else %}
      ~fan1~
    {% endif %}
    { "{:>4.0%}".format(speed) }
  {% endif %}

[display_data __voron_display bed]
position: 1, 0
text: { render("_vheater_temperature", param_heater_name="heater_bed") }

[display_data __voron_display progress_text]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { "{:^6.0%}".format(progress) }
  
[display_data __voron_display progress_text2]
position: 1, 10
text:
  {% set progress = printer.display_status.progress %}
  { draw_progress_bar(1, 10, 6, progress) }

[display_data __voron_display printing_time]
position: 2, 10
text:
  {% set ptime = printer.idle_timeout.printing_time %}
  { "%02d:%02d" % (ptime // (60 * 60), (ptime // 60) % 60) }

[display_data __voron_display chamber]
position: 2, 0
text:
  {% set chamber = printer['temperature_fan chamber'] %}
	~chamber~
	{ "%3.0f" % (chamber.temperature,) }
	~degrees~

[display_data __voron_display print_status]
position: 3, 0
text: 
  {% if printer.display_status.message %}
    { printer.display_status.message }
  {% elif printer.idle_timeout.printing_time %}
    {% set pos = printer.toolhead.position %}
    { "X%-4.0fY%-4.0fZ%-5.2f" % (pos.x, pos.y, pos.z) }
  {% else %}
    { "V2.662 " }
	~voron~
  {% endif %}

#####################################################################
# 	Display Menu definition
#####################################################################
##  Remove menu octoprint 
[menu __main __octoprint]
type: list
enable: False
name: OctoPrint
[menu __main __octoprint __pause]
type: command
enable: False
name: Pause printing
[menu __main __octoprint __resume]
type: command
enable: False
name: Resume printing
[menu __main __octoprint __abort]
type: command
enable: False
name: Abort printing

[menu __main __power_off]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Power Off
index: 0
gcode:
    {menu.exit()}
    PRINTER_OFF

#####################################################################
# 	LCD Macro
#####################################################################
[gcode_macro LCD_GREEN]
## Green Noob
gcode:
    SET_LED LED=neo_display RED=0   GREEN=0.5   BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=neo_display RED=0   GREEN=0.5   BLUE=0 INDEX=3 TRANSMIT=1
    
[gcode_macro LCD_RED]
## Red Noob
gcode:
    SET_LED LED=neo_display RED=0.5   GREEN=0   BLUE=0 INDEX=2 TRANSMIT=0
    SET_LED LED=neo_display RED=0.5   GREEN=0   BLUE=0 INDEX=3 TRANSMIT=1

[gcode_macro LCD_BLUE]
## Blue Noob
gcode:
    SET_LED LED=neo_display RED=0   GREEN=0   BLUE=0.5 INDEX=2 TRANSMIT=0
    SET_LED LED=neo_display RED=0   GREEN=0   BLUE=0.5 INDEX=3 TRANSMIT=1
